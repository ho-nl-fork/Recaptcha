<?php
/**
 * Studioforty9_Recaptcha
 *
 * @category  Studioforty9
 * @package   Studioforty9_Recaptcha
 * @author    StudioForty9 <info@studioforty9.com>
 * @copyright 2015 StudioForty9 (http://www.studioforty9.com)
 * @license   https://github.com/studioforty9/recaptcha/blob/master/LICENCE BSD
 * @version   1.5.7
 * @link      https://github.com/studioforty9/recaptcha
 * @see       Studioforty9_Recaptcha_Block_Explicit
 */
$id = $this->getRecaptchaId();

$formHandle = $this->getFormHandle() ? $this->getFormHandle() : 'dataForm';
$buttonSelector = $this->getButtonSelector() ? $this->getButtonSelector() : 'button[type=submit]';

?>
<?php if ($this->isAllowed($this->getAction()->getFullActionName())): ?>
    <?php if ($this->getRecaptchaType() == 'invisible'): ?>
        <div class="recaptcha" id="recaptcha-<?php echo $id ?>">
            <script type="text/javascript">
                if (typeof recaptchaOnloadCallbacks === 'undefined') {
                    var recaptchaOnloadCallbacks = [];
                }
                if (typeof recaptchaWidgets === 'undefined') {
                    var recaptchaWidgets = [];
                }
                recaptchaOnloadCallbacks.push(function () {
                    var button = jQuery('#recaptcha-<?php echo $id ?>').closest('form').find('<?php echo $buttonSelector ?>')[0];
                    var widget_id = grecaptcha.render(button, {
                        'sitekey': "<?php echo $this->getSiteKey(); ?>",
                        'theme': "<?php echo $this->getTheme(); ?>",
                        'type': "<?php echo $this->getType(); ?>",
                        'size': "invisible",
                        'badge': "<?php echo $this->getBadgeLocation(); ?>",
                        'callback': function(response) {
                            var form = <?php echo $formHandle ?>;
                            if (form.validator && form.validator.validate()){
                                form.submit();
                            } else {
                                grecaptcha.reset(recaptchaWidgets['#recaptcha-<?php echo $id ?>']);
                            }
                        }
                    });
                    jQuery(button).attr('data-widget-id', widget_id);
                    recaptchaWidgets['#recaptcha-<?php echo $id ?>'] = widget_id;
                });
            </script>
        </div>
    <?php else: ?>
        <div class="recaptcha" style="overflow:hidden;position:relative;margin-bottom:10px;">
            <input type="checkbox" id="cb-<?php echo $id ?>" name="cb-<?php echo $id ?>" value="" class="required-entry" style="visibility:hidden; position:absolute; left:-1000000px" />
            <div id="el-<?php echo $id ?>"></div>
            <script type="text/javascript">
                if (typeof recaptchaOnloadCallbacks === 'undefined') {
                    var recaptchaOnloadCallbacks = [];
                }
                recaptchaOnloadCallbacks.push(function () {
                    grecaptcha.render('el-<?php echo $id ?>', {
                        'sitekey': "<?php echo $this->getSiteKey(); ?>",
                        'theme': "<?php echo $this->getTheme(); ?>",
                        'type': "<?php echo $this->getType(); ?>",
                        'size': "<?php echo $this->getSize(); ?>",
                        'callback': function(response) {
                            if (response.length > 0) {
                                $('cb-<?php echo $id ?>').writeAttribute('value', 'checked');
                                $('cb-<?php echo $id ?>').checked = true;
                            }
                        }
                    });
                });
            </script>
        </div>
    <?php endif; ?>
    <?php if ($this->getInitialized() == false): ?>
    <?php $this->setInitialized(true) ?>
    <?php echo $this->getRecaptchaScript($id); ?>
    <script>
        function recaptchaOnloadCallback()
        {
            if (typeof recaptchaOnloadCallbacks === "undefined") {
                return;
            }

            for (var i = 0; i < recaptchaOnloadCallbacks.length; i++) {
                (recaptchaOnloadCallbacks[i])();
            }
            recaptchaOnloadCallbacks = [];
        }
    </script>
    <?php endif; ?>
<?php endif; ?>
